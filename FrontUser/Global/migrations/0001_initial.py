# Generated by Django 5.1.3 on 2024-12-11 12:12

import datetime
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0006_customuser_approved'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='academic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=105, unique=True, verbose_name='Academic Year')),
                ('start_date', models.DateField(default=datetime.date.today)),
                ('end_date', models.DateField()),
                ('is_active', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Announcements',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=128)),
                ('body', models.TextField(max_length=150)),
                ('audiences', models.CharField(choices=[('Parents', 'Parents'), ('Teachers', 'Teachers'), ('Students', 'Students'), ('Everyone', 'Everyone')], default='Everyone', max_length=8)),
                ('scheduled_for', models.DateField(default=datetime.datetime.now)),
                ('date_created', models.DateField(auto_now_add=True)),
                ('date_modified', models.DateField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Announcements',
            },
        ),
        migrations.CreateModel(
            name='Assessments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=125, verbose_name='Name of Assessment')),
                ('use_for_assessment', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'assessments',
            },
        ),
        migrations.CreateModel(
            name='Events',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(default='', max_length=100)),
                ('event_tags', models.CharField(choices=[('examination', 'Examination'), ('holiday', 'Holiday'), ('meeting', 'Meeting'), ('extracurricular', 'Extracurricular'), ('workshop', 'Workshop'), ('graduation', 'Graduation'), ('festival', 'Festival')], max_length=15)),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('location', models.CharField(blank=True, default='N/A', max_length=100)),
            ],
            options={
                'verbose_name_plural': 'Events',
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='student', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('fullname', models.CharField(blank=True, default='', max_length=255, verbose_name='fullname')),
                ('student_id', models.CharField(blank=True, max_length=20)),
                ('passkey', models.CharField(blank=True, max_length=16, unique=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Student',
            },
        ),
        migrations.CreateModel(
            name='StudentClasses',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('created', models.DateField(auto_now_add=True)),
                ('modified', models.DateField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'student classes',
            },
        ),
        migrations.CreateModel(
            name='Approvals',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('firstname', models.CharField(max_length=100)),
                ('lastname', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('approved', models.BooleanField()),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='approvals', to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'verbose_name_plural': 'approvals',
            },
        ),
        migrations.CreateModel(
            name='Guardian',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='parent', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('fullname', models.CharField(blank=True, default='', max_length=255, verbose_name='fullname')),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('wards', models.ManyToManyField(blank=True, to='Global.student')),
            ],
        ),
        migrations.AddField(
            model_name='student',
            name='student_class',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='Global.studentclasses'),
        ),
        migrations.CreateModel(
            name='subjects',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='name of subject')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('classes', models.ManyToManyField(to='Global.studentclasses', verbose_name='Subjects')),
            ],
            options={
                'verbose_name_plural': 'subjects',
            },
        ),
        migrations.CreateModel(
            name='staff',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='staff', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('fullname', models.CharField(blank=True, default='', max_length=255, verbose_name='fullname')),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('teacher_class', models.ManyToManyField(related_name='teacher_class', to='Global.studentclasses')),
                ('subject', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='Global.subjects', verbose_name='subject taught')),
            ],
            options={
                'verbose_name_plural': 'staff',
            },
        ),
        migrations.CreateModel(
            name='Assessment_records',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assessment_tag', models.CharField(blank=True, choices=[('Exams', 'Exams'), ('Class Assessment', 'Class Assessment')], max_length=25, verbose_name='Tag')),
                ('total_score', models.IntegerField(null=True, verbose_name='Total marks')),
                ('score', models.IntegerField(verbose_name='score in the assessement')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('academic_year', models.ForeignKey(default=False, null=True, on_delete=django.db.models.deletion.RESTRICT, to='Global.academic', verbose_name='academic year')),
                ('assessment', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='Global.assessments', verbose_name='assessment')),
                ('student', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, to='Global.student', verbose_name='student')),
                ('subject', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, to='Global.subjects', verbose_name='subject')),
            ],
            options={
                'verbose_name_plural': 'Assessment Records',
                'constraints': [models.UniqueConstraint(fields=('assessment', 'student', 'subject', 'academic_year'), name='Student Must have a unique assessment subject and academic year')],
            },
        ),
    ]
